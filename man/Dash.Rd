% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dash.R
\docType{class}
\name{Dash}
\alias{Dash}
\title{Generate a Dash server}
\format{An \link[R6:R6Class]{R6::R6Class} generator object}
\usage{
app <- Dash$new(name = "dash", server = fiery::Fire$new(), url_base_pathname = "/", csrf_protect = TRUE)
}
\description{
Description coming soon
}
\section{Arguments}{

\tabular{lll}{
\code{name} \tab  \tab The name of the Dash application.\cr
\code{server} \tab  \tab The web server which powers the application. Currently only \link[fiery:Fire]{fiery::Fire} objects are allowed.\cr
\code{url_base_pathname} \tab  \tab The base path for locating the Dash application.\cr
\code{csrf_protect} \tab  \tab Whether to protect the Dash application from CSRF vulnerabilities.
}
}

\section{Fields}{

\describe{
\item{\code{server}}{A \link[fiery:Fire]{fiery::Fire} object}
}
}

\section{Methods}{

\describe{
\item{\code{layout_set(...)}}{Set the layout (i.e., user interface). Should be a collection of \link{components}}
\item{\code{layout_get()}}{Retrieves the layout (i.e., user interface).}
\item{\code{config_set(suppress_callback_exceptions, permissions_cache_expiry)}}{Set the config.}
\item{\code{config_get()}}{Get the config.}
\item{\code{callback(output, input, state)}}{Define the dependency graph (i.e., input/output relationships).}
\item{\code{run_server(block = TRUE, showcase = FALSE, ...)}}{Launch the application. See \link[fiery:Fire]{fiery::Fire} methods for a description of the arguments}
}
}

\examples{

# hello dash!
app <- dasher::Dash$new()
\dontrun{
app$run_server()
}


# use the layout_set method to define your UI
app$layout_set(
  html_h2("Hello Dash"),
  "Here is a slider",
  core_slider()
)
# retrieve the layout with layout_get()
app$layout_get()


}
\seealso{
\url{https://plot.ly/dash/}
}
\author{
Carson Sievert
}
\keyword{datasets}
